#encoding:utf-8
# __author__ = 'donghao'
# __time__ = 2019/3/18 13:43
'''
这是线程之间通信的最简单机制之一：一个线程发出事件信号，其他线程等待它。

事件对象管理一个内部标志，该标志可以使用该set()方法设置为true，并使用该 方法重置为false clear() 。该wait()方法将阻塞，直到该标志为真。

类threading.Event
实现事件对象的类。事件管理一个标志，该标志可以使用该set()方法设置为true，并使用该方法重置为false clear()。该wait()方法将阻塞，直到该标志为真。该标志最初是假的。

在版本3.3中更改：从工厂功能更改为类。

is_set（）
当且仅当内部标志为真时返回true。

set（）
将内部标志设置为true。等待它变为真的所有线程都被唤醒。wait()一旦标志为真，调用的线程将不会阻塞。

clear（）
将内部标志重置为false。随后，线程调用 wait()将阻塞，直到set()被调用以再次将内部标志设置为true。

wait（超时=无）
阻止，直到内部标志为真。如果输入时内部标志为真，则立即返回。否则，阻塞直到另一个线程调用 set()将标志设置为true，或者直到发生可选的超时。

当超时参数存在而不存在时None，它应该是一个浮点数，指定操作的超时（以秒为单位）（或其分数）。

当且仅当内部标志在等待调用之前或等待开始之后设置为true时，此方法返回true，因此True除非给出超时且操作超时，否则它将始终返回。

在3.1版中更改：以前，该方法始终返回None。
'''